import React, { useState, useEffect } from "react";
import { useHistory } from "react-router-dom";
import authService from "../../services/authService";
import userService from "../../services/userService";
import analyticsService from "../../services/analyticsService";

// Components
import CardStats from "components/Cards/CardStats.js";

export default function TeacherDashboard() {
  const history = useHistory();
  const [currentUser, setCurrentUser] = useState(null);
  const [dashboardStats, setDashboardStats] = useState({
    totalStudents: 0,
    activeStudents: 0,
    totalLessons: 0,
    completedLessons: 0
  });
  const [recentActivities, setRecentActivities] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Get current user info
    const user = authService.getCurrentUserFromToken();
    setCurrentUser(user);

    // Load dashboard data
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);
      
      // Load students statistics
      const studentsResponse = await userService.getAllUsers('STUDENT');
      const students = studentsResponse || [];
      
      // Load system analytics for lessons count
      const analyticsResponse = await analyticsService.getSystemAnalytics();
      
      setDashboardStats({
        totalStudents: students.length,
        activeStudents: students.filter(s => s.isActive).length,
        totalLessons: analyticsResponse.data?.totalLessons || 0,
        completedLessons: analyticsResponse.data?.completedLessons || 0
      });

      // Mock recent activities (replace with real data later)
      setRecentActivities([
        {
          id: 1,
          student: 'Nguy·ªÖn VƒÉn A',
          action: 'Ho√†n th√†nh b√†i listening v·ªÅ Travel',
          time: '2 ph√∫t tr∆∞·ªõc',
          score: 8.5
        },
        {
          id: 2,
          student: 'Tr·∫ßn Th·ªã B',
          action: 'B·∫Øt ƒë·∫ßu b√†i reading v·ªÅ Technology',
          time: '15 ph√∫t tr∆∞·ªõc',
          score: null
        },
        {
          id: 3,
          student: 'L√™ VƒÉn C',
          action: 'Ho√†n th√†nh b√†i vocabulary v·ªÅ Business',
          time: '1 gi·ªù tr∆∞·ªõc',
          score: 9.2
        }
      ]);

    } catch (error) {
      console.error('Error loading dashboard data: - Dashboard.js:75', error);
      // Keep some fallback data
      setDashboardStats({
        totalStudents: 0,
        activeStudents: 0,
        totalLessons: 0,
        completedLessons: 0
      });
    } finally {
      setLoading(false);
    }
  };

  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return "Ch√†o bu·ªïi s√°ng";
    if (hour < 18) return "Ch√†o bu·ªïi chi·ªÅu";
    return "Ch√†o bu·ªïi t·ªëi";
  };

  const navigateToStudents = () => {
    history.push('/teacher/students');
  };

  const navigateToReports = () => {
    history.push('/admin/student-reports');
  };

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
        <span className="ml-4 text-gray-600">ƒêang t·∫£i dashboard...</span>
      </div>
    );
  }

  return (
    <>
      {/* Welcome Section */}
      <div className="relative bg-gradient-to-r from-blue-600 to-purple-600 md:pt-32 pb-32 pt-12">
        <div className="px-4 md:px-10 mx-auto w-full">
          <div className="flex flex-wrap items-center">
            <div className="w-full lg:w-8/12 px-4">
              <div className="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-white">
                <div className="flex-auto p-5 lg:p-10">
                  <h1 className="text-3xl font-semibold text-blueGray-700">
                    {getGreeting()}, {currentUser?.fullName}! üë®‚Äçüè´
                  </h1>
                  <p className="text-lg text-blueGray-500 mt-3">
                    Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi b·∫£ng ƒëi·ªÅu khi·ªÉn gi√°o vi√™n. H√£y theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa c√°c h·ªçc vi√™n v√† h·ªó tr·ª£ h·ªç ƒë·∫°t ƒë∆∞·ª£c k·∫øt qu·∫£ t·ªët nh·∫•t.
                  </p>
                  <p className="text-sm text-blueGray-400 mt-2">
                    H√¥m nay l√† {new Date().toLocaleDateString('vi-VN', {
                      weekday: 'long',
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </p>
                  
                  {/* Quick Actions */}
                  <div className="flex space-x-3 mt-6">
                    <button
                      onClick={navigateToStudents}
                      className="bg-blue-500 text-black active:bg-blue-600 text-sm font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none ease-linear transition-all duration-150"
                    >
                      <i className="fas fa-users mr-2"></i>
                      Qu·∫£n l√Ω h·ªçc vi√™n
                    </button>
                    <button
                      onClick={navigateToReports}
                      className="bg-green-500 text-black active:bg-green-600 text-sm font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none ease-linear transition-all duration-150"
                    >
                      <i className="fas fa-chart-bar mr-2"></i>
                      B√°o c√°o chi ti·∫øt
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <div className="w-full lg:w-4/12 px-4">
              <div className="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-white">
                <div className="flex-auto p-5 lg:p-10 text-center">
                  <div className="inline-flex items-center justify-center w-16 h-16 text-white bg-gradient-to-r from-blue-500 to-purple-500 rounded-full mb-4">
                    <i className="fas fa-chalkboard-teacher text-xl"></i>
                  </div>
                  <h4 className="text-xl font-semibold text-blueGray-700">
                    Gi√°o vi√™n
                  </h4>
                  <p className="text-sm text-blueGray-500 mt-2">
                    {currentUser?.email}
                  </p>
                  <p className="text-sm text-blueGray-400 mt-1">
                    {currentUser?.school || 'SkillBridge Platform'}
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="relative -mt-24">
        <div className="px-4 md:px-10 mx-auto w-full">
          <div className="flex flex-wrap">
            <div className="w-full lg:w-6/12 xl:w-3/12 px-4">
              <CardStats
                statSubtitle="T·ªïng h·ªçc vi√™n"
                statTitle={dashboardStats.totalStudents}
                statArrow="up"
                statPercent="12"
                statPercentColor="text-emerald-500"
                statDescripiron="T·ª´ th√°ng tr∆∞·ªõc"
                statIconName="fas fa-users"
                statIconColor="bg-red-500"
              />
            </div>
            <div className="w-full lg:w-6/12 xl:w-3/12 px-4">
              <CardStats
                statSubtitle="H·ªçc vi√™n ho·∫°t ƒë·ªông"
                statTitle={dashboardStats.activeStudents}
                statArrow="up"
                statPercent="8"
                statPercentColor="text-emerald-500"
                statDescripiron="T·ª´ tu·∫ßn tr∆∞·ªõc"
                statIconName="fas fa-user-check"
                statIconColor="bg-orange-500"
              />
            </div>
            <div className="w-full lg:w-6/12 xl:w-3/12 px-4">
              <CardStats
                statSubtitle="B√†i h·ªçc kh·∫£ d·ª•ng"
                statTitle={dashboardStats.totalLessons}
                statArrow="up"
                statPercent="5"
                statPercentColor="text-emerald-500"
                statDescripiron="T·ª´ tu·∫ßn tr∆∞·ªõc"
                statIconName="fas fa-book-open"
                statIconColor="bg-pink-500"
              />
            </div>
            <div className="w-full lg:w-6/12 xl:w-3/12 px-4">
              <CardStats
                statSubtitle="B√†i ƒë√£ ho√†n th√†nh"
                statTitle={dashboardStats.completedLessons}
                statArrow="up"
                statPercent="15"
                statPercentColor="text-emerald-500"
                statDescripiron="T·ª´ h√¥m qua"
                statIconName="fas fa-check-circle"
                statIconColor="bg-lightBlue-500"
              />
            </div>
          </div>
        </div>
      </div>

      {/* Content Section */}
      <div className="px-4 md:px-10 mx-auto w-full">
        <div className="flex flex-wrap mt-4">
          {/* Recent Activities */}
          <div className="w-full xl:w-8/12 mb-12 xl:mb-0 px-4">
            <div className="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded">
              <div className="rounded-t mb-0 px-4 py-3 border-0">
                <div className="flex flex-wrap items-center">
                  <div className="relative w-full px-4 max-w-full flex-grow flex-1">
                    <h3 className="font-semibold text-base text-blueGray-700">
                      Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
                    </h3>
                  </div>
                  <div className="relative w-full px-4 max-w-full flex-grow flex-1 text-right">
                    <button
                      className="bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
                      onClick={() => alert('Xem t·∫•t c·∫£ ho·∫°t ƒë·ªông')}
                    >
                      Xem t·∫•t c·∫£
                    </button>
                  </div>
                </div>
              </div>

              <div className="block w-full overflow-x-auto">
                <table className="items-center w-full bg-transparent border-collapse">
                  <thead>
                    <tr>
                      <th className="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                        H·ªçc vi√™n
                      </th>
                      <th className="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                        Ho·∫°t ƒë·ªông
                      </th>
                      <th className="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                        Th·ªùi gian
                      </th>
                      <th className="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                        ƒêi·ªÉm s·ªë
                      </th>
                    </tr>
                  </thead>

                  <tbody>
                    {recentActivities.map((activity) => (
                      <tr key={activity.id}>
                        <th className="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left">
                          <span className="ml-3 font-bold text-blueGray-600">
                            {activity.student}
                          </span>
                        </th>
                        <td className="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                          {activity.action}
                        </td>
                        <td className="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                          <i className="fas fa-clock text-orange-500 mr-2"></i>
                          {activity.time}
                        </td>
                        <td className="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                          {activity.score ? (
                            <span className="text-emerald-500 font-bold">
                              {activity.score}/10
                            </span>
                          ) : (
                            <span className="text-blueGray-400">ƒêang h·ªçc</span>
                          )}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          {/* Quick Actions Panel */}
          <div className="w-full xl:w-4/12 px-4">
            <div className="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded">
              <div className="rounded-t mb-0 px-4 py-3 border-0">
                <div className="flex flex-wrap items-center">
                  <div className="relative w-full px-4 max-w-full flex-grow flex-1">
                    <h3 className="font-semibold text-base text-blueGray-700">
                      Thao t√°c nhanh
                    </h3>
                  </div>
                </div>
              </div>
              <div className="p-4 space-y-3">
                <button
                  onClick={navigateToStudents}
                  className="w-full text-left bg-blue-50 hover:bg-blue-100 text-blue-700 font-semibold py-3 px-4 rounded-lg transition-colors duration-200"
                >
                  <i className="fas fa-users mr-3"></i>
                  Xem danh s√°ch h·ªçc vi√™n
                </button>
                
                <button
                  onClick={navigateToReports}
                  className="w-full text-left bg-green-50 hover:bg-green-100 text-green-700 font-semibold py-3 px-4 rounded-lg transition-colors duration-200"
                >
                  <i className="fas fa-chart-bar mr-3"></i>
                  Xem b√°o c√°o chi ti·∫øt
                </button>
                
                <button
                  onClick={() => alert('T√≠nh nƒÉng t·∫°o th√¥ng b√°o ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn')}
                  className="w-full text-left bg-purple-50 hover:bg-purple-100 text-purple-700 font-semibold py-3 px-4 rounded-lg transition-colors duration-200"
                >
                  <i className="fas fa-bullhorn mr-3"></i>
                  T·∫°o th√¥ng b√°o
                </button>
                
                <button
                  onClick={() => alert('T√≠nh nƒÉng xu·∫•t b√°o c√°o ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn')}
                  className="w-full text-left bg-orange-50 hover:bg-orange-100 text-orange-700 font-semibold py-3 px-4 rounded-lg transition-colors duration-200"
                >
                  <i className="fas fa-file-export mr-3"></i>
                  Xu·∫•t b√°o c√°o
                </button>
              </div>
            </div>

            {/* Tips Panel */}
            <div className="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded">
              <div className="rounded-t mb-0 px-4 py-3 border-0">
                <div className="flex flex-wrap items-center">
                  <div className="relative w-full px-4 max-w-full flex-grow flex-1">
                    <h3 className="font-semibold text-base text-blueGray-700">
                      M·∫πo gi·∫£ng d·∫°y
                    </h3>
                  </div>
                </div>
              </div>
              <div className="p-4">
                <div className="text-sm text-blueGray-600 space-y-3">
                  <div className="flex items-start">
                    <i className="fas fa-lightbulb text-yellow-500 mr-2 mt-1"></i>
                    <p>Theo d√µi th∆∞·ªùng xuy√™n ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa h·ªçc vi√™n ƒë·ªÉ h·ªó tr·ª£ k·ªãp th·ªùi.</p>
                  </div>
                  <div className="flex items-start">
                    <i className="fas fa-lightbulb text-yellow-500 mr-2 mt-1"></i>
                    <p>Khuy·∫øn kh√≠ch h·ªçc vi√™n th·ª±c h√†nh ƒë·ªÅu ƒë·∫∑n m·ªói ng√†y.</p>
                  </div>
                  <div className="flex items-start">
                    <i className="fas fa-lightbulb text-yellow-500 mr-2 mt-1"></i>
                    <p>Cung c·∫•p feedback chi ti·∫øt ƒë·ªÉ h·ªçc vi√™n c·∫£i thi·ªán k·ªπ nƒÉng.</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}